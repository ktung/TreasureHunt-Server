<div id="map"></div>
<div id="enigmaAnswer"></div>

<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
<script type="text/javascript">
    // Init map
    var map = L.map('map').setView([43.6203152, 7.0656119], 15);
    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
        maxZoom: 18,
        id: 'ktung.2jkp045o',
        accessToken: 'pk.eyJ1Ijoia3R1bmciLCJhIjoiY2l4cTY4MThsMDR4dzMycHU4bGk4eGl4MCJ9.oRNkkG9SFOdZ-bEyaw6vxw'
    }).addTo(map);

    // Init areas
    var xhr = new XMLHttpRequest();

    xhr.open("GET", "http://localhost:8080/areas", true);
    xhr.send(null);

    xhr.onreadystatechange = function() {
    if (xhr.readyState == 4 && (xhr.status == 200 || xhr.status == 0)) {
            var areas = JSON.parse(xhr.responseText);
            areas.forEach(function(area) {
                var circle = L.circle([area.center.latitude, area.center.longitude], {
                    color: 'red',
                    fillColor: '#f03',
                    fillOpacity: 0.5,
                    radius: area.radius
                }).addTo(map);
            });
        }
    };

    // Init socket user position
    var socket = io.connect('http://localhost:8080');
    socket.emit('serverConnect');

    // var data = {
    //     'enigmaId': '5889cb40fbca7d173db3c9a3',
    //     'image': 'ekdjfkejz',
    //     'answer': 'cocou'
    // }
    // socket.emit('enigmaAnswer', {'id': 'Team1', 'data': data})

    var markers = [];
    socket.on('userPosition', function(data) {
        console.log("position" + data)

        if (markers[data.id] !== undefined) {
            markers[data.id].remove();
        }

        var marker = L.marker([data.position.latitude, data.position.longitude]).addTo(map);
        marker.bindPopup("Team <b>"+ data.id +"</b>")
        markers[data.id] = marker;
    });

    // Init enigma answer
    var xhr = new XMLHttpRequest();

    xhr.open("GET", "http://localhost:8080/enigmaAnswer", true);
    xhr.send(null);

    xhr.onreadystatechange = function() {
    if (xhr.readyState == 4 && (xhr.status == 200 || xhr.status == 0)) {
            var enigmaAnswer = JSON.parse(xhr.responseText);
            enigmaAnswer.forEach(function(answer) {
                console.log(answer)
            });
        }
    };
</script>
